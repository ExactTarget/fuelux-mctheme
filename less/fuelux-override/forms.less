.labelHover() {
	&:hover {
		color: @grayLight;
	}
}

.fuelux .radio, .fuelux .checkbox {
	// outline: 1px solid limegreen;
	// position: relative;
	// left: -4px;
	
	&-inline {
		padding-left: 0;
		& {
			left: 0px;
		}
		&.highlight {
			position: relative;
			left: -4px;
			left: 0px;
		}
	}

	// This handy trick allows us to make rules for .radio, .checkbox, .radio-inline, and, .checkbox-inline all at once.
	&, &-inline {

		// Sometimes the wrapping containter is a div with .checkbox or .radio, and has a label within it.
		// Sometimes the label itself is the wrapping container, and has .checkbox or .radio on it.
		// The use of the amperstand "parent selector" here allows us to cover many scenarios at once, with terse, but elegant, code.
		label&, .input-label&, & label, & .input-label {
			.labelHover;
		}
		
		label, .input-label, label& {
			cursor: pointer;
			font-weight: normal;
			font-size: 12px;
			.labelHover;
		}

		& {

				input:not(.sr-only) {
				& ~ label {
					// outline: 1px solid rgba(0,0,0,0.3);
					padding: 4px 4px 4px 24px;
					border-radius: @baseBorderRadius;
					position: relative;
					left: -3px;
				}
				&:checked ~ label {
					opacity: 1;
					z-index: 0;
				}
			}
		}

		&.highlight {

				input:not(.sr-only) {
				& ~ label {
					// padding: 4px;
					padding: 4px 4px 4px 24px;
					border-radius: @baseBorderRadius;
				}
				&:checked ~ label {
					background-color: #e9e9e9;
					opacity: 1;
					z-index: 0;
				}
			}
		}


		input:not(.sr-only) {

			position: relative;
			width: 0px;
			height: 0px;
			margin: -2px;
			padding: 0;
			overflow: hidden;
			clip: rect(0,0,0,0);
			border: 0;
			opacity: 0;

			& ~ label {
				// trying to style them all like highlight, we'll see....
				// padding-left: 0;

				&:before {
					font-family:"Glyphicons Halflings";
					font-style: normal;
					font-weight: normal;
					font-variant: normal;
					text-transform: none;
					line-height: 1;
					speak: none;
					border: 1px solid @gray67;
					color: #fff;
					font-size: 9px;
					width: 14px;
					height: 14px;
					padding: 0;
					margin-top: 0;
					margin-bottom: -2px;
					cursor: pointer;
					display: inline-block;
					z-index: 2;
					content: "";
					position: relative;
					margin-right: -20px;
					left: -20px;
				}

			}



			/* for keyboard tabbing */
			&:active ~ label, &:focus ~ label {
				color: @text-color;
				color: rgb(91, 157, 217);
				cursor: pointer;
				
				&:before {
					outline-color: transparent;
					outline-offset: 0;
					outline-style: none;
					outline-width: 0;
				}

				&, &:hover {
					color: @text-color;
					cursor: pointer;
				}
			}
			&:active:hover ~ label, &:focus:hover ~ label, &:focus:hover ~ label, &:checked:hover ~ label {
				&, &:hover {
					color: @text-color;
					cursor: pointer;
				}
			}




			&[disabled="disabled"] {
				& ~ label, & ~ label:before {
					color: @text-color;
					opacity: 0.5 !important;
					cursor: not-allowed !important;
				}
			}

			&:checked ~ label {
				&:before {
					background: #39b3d7;
					border-color: #39b3d7;
				}
			}

		}

		&, &:hover {
			input {
				&:checked {

				}
			}
		}

		&.highlight {
			&:before {
				left: 4px;
				top: 7px;
			}
		}
	}


	& + & input:not(.sr-only) ~ label {
		top: 1px;
	}

	&.highlight {
		input:not(.sr-only) {
			& ~ label {
				// left: -8px;
				left: -3px;
				position: relative;
			}
		}
	}


	&-inline {
		padding-left: 0;
		&.highlight {
			// left: -8px;
		}
		&:before {
			left: 0;
			top: 3px;
		}
	}



}
